[
  {
    "objectID": "Data_Visualization_2.html",
    "href": "Data_Visualization_2.html",
    "title": "Data Visualization 2",
    "section": "",
    "text": "“age_gaps”\nThe age gap between the famous movie couples.\nJon Harmon\nFebruary 14, 2023\nhttps://github.com/rfordatascience/tidytuesday/tree/main/data/2023/2023-02-14\nThe data comes from https://hollywoodagegap.com/ , https://www.data-is-plural.com/archive/2018-02-07-edition/\nhtml"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Neil Lenhoff",
    "section": "",
    "text": "I am in Professor Jo Hardin’s Foundations of Data Science in R course, DS002R, in the Fall of 2025. I am excited to learn more about data visualization techniques. In my free-time, I like riding horses and making chocolate chip pancakes."
  },
  {
    "objectID": "Data_Visualization.html",
    "href": "Data_Visualization.html",
    "title": "Neil Lenhoff",
    "section": "",
    "text": "“canada_births_1991_2022”\nBirths in Canada from 1991 to 2022, monthly and annually\nJon Harmon and Tracy Teal\nJanuary 9, 2024\nhttps://github.com/rfordatascience/tidytuesday/blob/main/data/2024/2024-01-09/canada_births_1991_2022.csv\nThe dataset this comes from https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=1310041501&pickMembers%5B0%5D=3.1&cubeTimeFrame.startYear=1991&cubeTimeFrame.endYear=2022&referencePeriods=19910101%2C20220101 , https://api.nhle.com/stats/rest/en/team , https://api-web.nhle.com/v1/\nhtml"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Text_Analysis.html",
    "href": "Text_Analysis.html",
    "title": "Text Analysis",
    "section": "",
    "text": "I got this data from the Kaggle website https://www.kaggle.com/datasets/fabriziocominetti/the-office-lines The direct link is not longer active, https://www.officequotes.net/ However, the cited source to the TV show is The Office. Created by Greg Daniels, performances by Steve Carell, Rainn Wilson, and John Krasinski, NBC, 2005–2013.\n\noffice &lt;- read.csv(\"the-office_lines.csv\")\n\n\nallline&lt;-office %&gt;% \n  mutate(Line2 = str_split(Line, \" \")) %&gt;% \n  unnest_longer(Line2) %&gt;%\n  mutate(Line2 = str_to_lower(Line2))\nlibrary(stringr)\npat &lt;- regex(\"\\\\bjesus\\\\b\\\\s+\\\\bchrist\\\\b\", ignore_case = TRUE)\ntotal &lt;- sum(str_count(office$Line, pat), na.rm = TRUE)\ntotal\n\n[1] 2\n\n\n\nallline&lt;-office %&gt;% \n  mutate(Line2 = str_split(Line, \" \")) %&gt;% \n  unnest_longer(Line2) %&gt;%\n  mutate(Line2 = str_to_lower(Line2))\nlibrary(stringr)\nallline$Line2 &lt;- as.character(allline$Line2)\npat &lt;- regex(\"\\\\bjesus\\\\b(?!\\\\s+christ\\\\b)\", ignore_case = TRUE)\ncounts &lt;- str_count(allline$Line2, pat)\ntotal_not_jesus_christ &lt;- sum(counts, na.rm = TRUE)\ntotal_not_jesus_christ\n\n[1] 29\n\n\n\nlibrary(ggplot2)\n\ndf &lt;- data.frame(\n  group = c(\"Jesus Christ\", \"Jesus\"),\n  value = c(2, 29)\n)\n\nggplot(df, aes(x = group, y = value)) +\n  geom_point(shape = 3, size = 6, stroke = 1.5, color = \"gold\") +\n  labs(title = \"How Many Times Jesus Was Said In The Office\", \n       x = \"Phrase Said\", y = \"Number of Times Said\") \n\n\n\n\n\n\n\n\nThis graph illustrates how many times the word “Jesus” was said in “The Office.” The insights I gained from my plot is how often “Christ” follows “Jesus.” The graph shows the frequency of the collocation. It is suprising how uncommon it occurs.\n\nplot2&lt;-office %&gt;% mutate(Line2 = str_split(Line, \" \")) %&gt;% \n  unnest_longer(Line2)\n\n\nplot3 &lt;- plot2 %&gt;% mutate(office = str_count(Line2, regex(\"\\\\boffice\\\\b\"))) %&gt;% group_by(Character) %&gt;% \n  summarise(word = n(), office = sum(office)) %&gt;% filter(office &gt; 0)\nhead(plot3)\n\n# A tibble: 6 × 3\n  Character          word office\n  &lt;chr&gt;             &lt;int&gt;  &lt;int&gt;\n1 Alex                249      1\n2 Andy              59501     72\n3 Angela            19425     15\n4 Angela And Dwight    22      1\n5 Billy Merchant      221      1\n6 Business Partner    122      1\n\n\n\nlibrary(tidyverse)\nmain_chars &lt;- c(\n  \"Michael\", \"Dwight\", \"Jim\", \"Pam\", \"Andy\", \"Ryan\", \"Stanley\",\n  \"Phyllis\", \"Angela\", \"Kevin\", \"Oscar\", \"Meredith\", \"Creed\",\n  \"Toby\", \"Kelly\", \"Erin\", \"Darryl\"\n)\nplot2_main &lt;- plot3 %&gt;%\n  filter(Character %in% main_chars) %&gt;%\n  mutate(label = paste0(Character, \" (\", office, \")\"))  \nplot2_main %&gt;%\n  ggplot(aes(x = \"\", y = office, fill = label)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(\"y\", start = 0) +\n  scale_fill_manual(values = c(\n    \"#E41A1C\", \"#377EB8\", \"#4DAF4A\", \"#984EA3\",\n    \"#FF7F00\", \"#FFFF33\", \"#A65628\", \"#F781BF\",\n    \"#999999\", \"#66C2A5\", \"#FC8D62\", \"#8DA0CB\",\n    \"#E78AC3\", \"#A6D854\", \"#FFD92F\", \"#E5C494\", \"#00FF66\"\n  )) +\n  labs(title = \"Times Each Main Office Character Said 'Office'\") +\n  theme_void() +\n  theme(\n    legend.title = element_blank(),\n  )\n\n\n\n\n\n\n\n\nThis graph illustrates how many times the main characters of the “The Office” said office. Besides the pie chart, there is also a table with character names and the frequency of how often they said the word. The insights I gained from my plot is Michael, the main character, is the most frequent user of the word “office”, but no character makes up the majority."
  }
]